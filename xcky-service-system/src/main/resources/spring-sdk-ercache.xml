<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-4.2.xsd
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache.xsd
    ">
    
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
		<property name="maxIdle" value="${redis_pool_maxIdle}" />  
		<property name="maxTotal" value="${redis_pool_maxTotal}" />  
		<property name="maxWaitMillis" value="${redis_pool_maxWaitMillis}" />  
		<property name="testOnBorrow" value="${redis_pool_testOnBorrow}" />  
	</bean>  
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
        <property name="hostName"    value="${redis_hostName}" />  
        <property name="port"        value="${redis_port}" />  
        <property name="password"    value="${redis_password}" />
        <property name="database"     value="${redis_dbIndex}" />  
        <property name="timeout"     value="${redis_timeout}" />  
        <property name="poolConfig"  ref="poolConfig" />  
    </bean> 

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
		<property name="keySerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
		</property>  
		<property name="valueSerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
		</property>  
		<property name="hashKeySerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
		</property>  
		<property name="hashValueSerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
		</property>        
    </bean>
    
    <!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.hisign.sdk.cache" />
	
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />
	
	<!-- ehCache 配置管理器 -->
	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:sdk-ehcache.xml" />
		<!--true:单例，一个cacheManager对象共享；false：多个对象独立  -->
		<property name="shared" value="true" />
		<property name="cacheManagerName" value="ehcacheManager" />
    </bean>
	
	<!-- ehCache 操作对象 -->
	<bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
	   <property name="cacheName" value="defaultSDKCache"/>
       <property name="cacheManager" ref="ehcacheManager"/>
	</bean>
	
	<bean id="ehcacheRedisCacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
               <bean  id="ehRedisCache" class="com.hisign.sdk.cache.ercache.EhRedisCache"> 
                   <property name="ehCache" ref="ehCache"/> 
                   <property name="name" value="ehRedisCache"/>
                   <property name="activeCount" value="10"/>
               </bean>
            </set>  
        </property>  
    </bean> 
    
    <cache:annotation-driven cache-manager="ehcacheRedisCacheManager"  proxy-target-class="true" /> 
</beans>